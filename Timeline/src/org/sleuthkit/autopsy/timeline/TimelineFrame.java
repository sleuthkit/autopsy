/*
 * Autopsy Forensic Browser
 *
 * Copyright 2013 Basis Technology Corp.
 * Contact: carrier <at> sleuthkit <dot> org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.sleuthkit.autopsy.timeline;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Image;

/**
 *
 * Ready timeline frame with layout to hold dynamic components
 */
 class TimelineFrame extends javax.swing.JFrame {

    /**
     * Creates new form TimelineFrame
     */
    public TimelineFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitYPane = new javax.swing.JSplitPane();
        topPane = new javax.swing.JPanel();
        splitXPane = new javax.swing.JSplitPane();
        leftPane = new javax.swing.JPanel();
        rightPane = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(TimelineFrame.class, "TimelineFrame.title")); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 700));

        splitYPane.setDividerLocation(420);
        splitYPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        splitYPane.setResizeWeight(0.5);
        splitYPane.setPreferredSize(new java.awt.Dimension(1024, 400));

        topPane.setPreferredSize(new java.awt.Dimension(1200, 400));
        topPane.setLayout(new java.awt.BorderLayout());
        splitYPane.setLeftComponent(topPane);

        splitXPane.setDividerLocation(600);
        splitXPane.setResizeWeight(0.5);
        splitXPane.setPreferredSize(new java.awt.Dimension(1200, 300));
        splitXPane.setRequestFocusEnabled(false);

        leftPane.setPreferredSize(new java.awt.Dimension(700, 300));
        leftPane.setLayout(new java.awt.BorderLayout());
        splitXPane.setLeftComponent(leftPane);

        rightPane.setPreferredSize(new java.awt.Dimension(500, 300));
        rightPane.setLayout(new java.awt.BorderLayout());
        splitXPane.setRightComponent(rightPane);

        splitYPane.setRightComponent(splitXPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitYPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitYPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void setTopPanel(Component component) {
        this.topPane.add(component, BorderLayout.CENTER);
    }
    
    void setBottomLeftPanel(Component component) {
        this.leftPane.add(component, BorderLayout.CENTER);
    }
    
    
    void setBottomRightPanel(Component component) {
        this.rightPane.add(component, BorderLayout.CENTER);
    }
    
    void setFrameName(String name) {
        this.setTitle(name);
    }
    
    void setFrameIcon(Image iconImage) {
        this.setIconImage(iconImage);
    }
    
    void setFrameSize(Dimension size) {
        this.setSize(size);
    }
    
    void setTopComponentCursor(Cursor cursor) {
        this.topPane.setCursor(cursor);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimelineFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimelineFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimelineFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimelineFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TimelineFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel leftPane;
    private javax.swing.JPanel rightPane;
    private javax.swing.JSplitPane splitXPane;
    private javax.swing.JSplitPane splitYPane;
    private javax.swing.JPanel topPane;
    // End of variables declaration//GEN-END:variables
}
