/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RecentActivityTopComponent.java
 *
 * Created on Dec 12, 2011, 1:55:46 PM
 */
package org.sleuthkit.autopsy.recentactivity;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.openide.windows.TopComponent;
import javax.swing.JFormattedTextField;
/**
 *
 * @author pmartel
 */
public class RecentActivityTopComponent extends TopComponent {

    RecentActivityDataExplorer edx;
    DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
    
    /** Creates new form RecentActivityTopComponent */
    public RecentActivityTopComponent(RecentActivityDataExplorer edx) {
        this.edx = edx;
        initComponents();
   }
    
    JFormattedTextField getDateFromTextField() {
        return dateFromTextField;
    }

    JFormattedTextField getDateToTextField() {
        return dateToTextField;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        makeNodesButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        IEhistory = new javax.swing.JCheckBox();
        CHhistory = new javax.swing.JCheckBox();
        FFhistory = new javax.swing.JCheckBox();
        Cookies = new javax.swing.JCheckBox();
        Bookmarks = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        dateFromTextField = new JFormattedTextField(this.dateFormat);
        dateFromButtonCalendar = new org.sourceforge.jcalendarbutton.JCalendarButton();
        dateToButtonCalendar = new org.sourceforge.jcalendarbutton.JCalendarButton();
        dateToTextField = new JFormattedTextField(this.dateFormat);
        activityProgressBar = new javax.swing.JProgressBar(0, 100);

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        makeNodesButton.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.makeNodesButton.text")); // NOI18N
        makeNodesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeNodesButtonActionPerformed(evt);
            }
        });

        jLabel1.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jLabel1.text")); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jLabel2.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jLabel3.text")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel4.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jLabel4.text")); // NOI18N

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        IEhistory.setSelected(true);
        IEhistory.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.IEhistory.text")); // NOI18N
        IEhistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IEhistoryActionPerformed(evt);
            }
        });

        CHhistory.setSelected(true);
        CHhistory.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.CHhistory.text")); // NOI18N

        FFhistory.setSelected(true);
        FFhistory.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.FFhistory.text")); // NOI18N

        Cookies.setSelected(true);
        Cookies.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.Cookies.text")); // NOI18N

        Bookmarks.setSelected(true);
        Bookmarks.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.Bookmarks.text")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel5.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jLabel5.text")); // NOI18N
        jLabel5.setToolTipText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jLabel5.toolTipText")); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel6.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jLabel6.text")); // NOI18N
        jLabel6.setToolTipText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jLabel6.toolTipText")); // NOI18N

        jTextField1.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jTextField1.text")); // NOI18N
        jTextField1.setToolTipText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jTextField1.toolTipText")); // NOI18N

        jLabel7.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jLabel7.text")); // NOI18N

        dateFromTextField.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.dateFromTextField.text")); // NOI18N
        dateFromTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateFromTextFieldFocusLost(evt);
            }
        });

        dateFromButtonCalendar.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.dateFromButtonCalendar.text")); // NOI18N
        dateFromButtonCalendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateFromPopupChanged(evt);
            }
        });

        dateToButtonCalendar.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.dateToButtonCalendar.text")); // NOI18N
        dateToButtonCalendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dateToPopupChanged(evt);
            }
        });

        dateToTextField.setText(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.dateToTextField.text")); // NOI18N
        dateToTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateToTextFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(makeNodesButton)
                        .addGap(18, 18, 18)
                        .addComponent(activityProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bookmarks)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CHhistory)
                        .addGap(18, 18, 18)
                        .addComponent(Cookies))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(IEhistory)
                        .addGap(18, 18, 18)
                        .addComponent(FFhistory))
                    .addComponent(jLabel2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateFromTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(dateFromButtonCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateToTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(dateToButtonCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(activityProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(makeNodesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IEhistory)
                    .addComponent(FFhistory))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CHhistory)
                    .addComponent(Cookies))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Bookmarks)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(97, 97, 97)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateFromTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateToTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(dateToButtonCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(1, 1, 1))
                        .addComponent(dateFromButtonCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        IEhistory.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(RecentActivityTopComponent.class, "RecentActivityTopComponent.jCheckBox1.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    private void makeNodesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeNodesButtonActionPerformed
        activityProgressBar.setIndeterminate(true);
        edx.makeNodes();
        activityProgressBar.setIndeterminate(false);
        
    }//GEN-LAST:event_makeNodesButtonActionPerformed

public void setProgress(int percent){
    activityProgressBar.setValue(percent);
}
    
private void IEhistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IEhistoryActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_IEhistoryActionPerformed

private void dateFromTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateFromTextFieldFocusLost
        // set the "from" calendar button to listen to change in the text field
        String fromDateString = this.dateFromTextField.getText();
        if (!fromDateString.equals("")) {
            try {
                Date fromDate = dateFormat.parse(fromDateString);
                dateFromButtonCalendar.setTargetDate(fromDate);
            } catch (ParseException ex) {
                // for now, no need to show the error message to the user her
            }
        }
}//GEN-LAST:event_dateFromTextFieldFocusLost

private void dateFromPopupChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateFromPopupChanged
        if (evt.getNewValue() instanceof Date) {
            setFromDate((Date) evt.getNewValue());
        }
}//GEN-LAST:event_dateFromPopupChanged

private void dateToPopupChanged(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateToPopupChanged
        if (evt.getNewValue() instanceof Date) {
            setToDate((Date) evt.getNewValue());
        }
}//GEN-LAST:event_dateToPopupChanged

private void dateToTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateToTextFieldFocusLost
        // set the "to" calendar button to listen to change in the text field
        String toDateString = this.dateToTextField.getText();
        if (!toDateString.equals("")) {
            try {
                Date toDate = dateFormat.parse(toDateString);
                dateToButtonCalendar.setTargetDate(toDate);
            } catch (ParseException ex) {
                // for now, no need to show the error message to the user here
            }
        }
}//GEN-LAST:event_dateToTextFieldFocusLost
 /**
     * Validate and set the datetime field on the screen given a datetime string.
     * @param date The date object
     */
    private void setFromDate(Date date) {
        String dateStringResult = "";
        if (date != null) {
            dateStringResult = dateFormat.format(date);
        }
        dateFromTextField.setText(dateStringResult);
        dateFromButtonCalendar.setTargetDate(date);
    }

    /**
     * Validate and set the datetime field on the screen given a date.
     * @param date The date object
     */
    private void setToDate(Date date) {
        String dateStringResult = "";
        if (date != null) {
            dateStringResult = dateFormat.format(date);
        }
        dateToTextField.setText(dateStringResult);
        dateToButtonCalendar.setTargetDate(date);
    }
    
    /**
     * Set the counts and populate the browser checkboxes which will be used to filter 
     */
    private int FFcount = 0;
    private int IEcount = 0;
    private int CHcount = 0;
    private int Cookiescount = 0;
    private int Bookmarkcount = 0;
    public void setbrowsercheckboxes(int IEcount, int FFcount, int CHcount, int Cookiescount, int Bookmarkcount) {
        IEhistory.setText("IE History (" + IEcount +")");
        FFhistory.setText("Firefox History (" + FFcount +")");
        CHhistory.setText("Chrome History (" + CHcount +")");
        Cookies.setText("All Cookies (" + Cookiescount +")");
        Bookmarks.setText("All Bookmarks (" + Bookmarkcount +")");
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Bookmarks;
    private javax.swing.JCheckBox CHhistory;
    private javax.swing.JCheckBox Cookies;
    private javax.swing.JCheckBox FFhistory;
    private javax.swing.JCheckBox IEhistory;
    private javax.swing.JProgressBar activityProgressBar;
    private org.sourceforge.jcalendarbutton.JCalendarButton dateFromButtonCalendar;
    private javax.swing.JFormattedTextField dateFromTextField;
    private org.sourceforge.jcalendarbutton.JCalendarButton dateToButtonCalendar;
    private javax.swing.JFormattedTextField dateToTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton makeNodesButton;
    // End of variables declaration//GEN-END:variables
}
