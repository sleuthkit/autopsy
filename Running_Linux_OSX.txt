This document outlines how to run a packaged version of Autopsy on Linux or OS X.  It does not cover how to compile it from source or the Windows installer.


* Prerequisites *

The following need to be done at least once. They do not need to be repeated for each Autopsy release.

- Install testdisk for photorec functionality
-- Linux:  % sudo apt-get install testdisk
-- OS X: % brew install testdisk

- (Optional) Install ImageMagick for Apple's High Efficiency Photo (HEIC/HEIF) support.
-- OS X: % brew install imagemagick
-- Linux:
     % sudo sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list

     % sudo apt-get update
     % sudo apt-get install build-essential autoconf libtool git-core
     % sudo apt-get build-dep imagemagick libmagickcore-dev libde265 libheif

     % cd /usr/src/ 

     % sudo git clone https://github.com/strukturag/libde265.git 
     % sudo git clone https://github.com/strukturag/libheif.git 

     % cd libde265/ 
     % sudo ./autogen.sh 
     % sudo ./configure 
     % sudo make 
     % sudo make install 

     % cd /usr/src/libheif/ 
     % sudo ./autogen.sh 
     % sudo ./configure 
     % sudo make 
     % sudo make install 

     % cd /usr/src/ 
     % sudo wget https://www.imagemagick.org/download/ImageMagick.tar.gz 
     % sudo tar xf ImageMagick.tar.gz 

     % cd ImageMagick-7*
     % sudo ./configure --with-heic=yes 
     % sudo make 
     % sudo make install 

     % sudo ldconfig  

- Install the BellSoft Java 8 JRE and JavaFX 8 distribution and set jdkhome.
  * The BellSoft distribution bundles OpenJDK and OpenJFX. Other distributions we have tried either don't
    bundle OpenJFX (AdoptOpenJDK) or don't include all necessary binaries (Amazon Corretto).
-- Linux:
    1. Install BellSoft Java 8
       % wget -q -O - https://download.bell-sw.com/pki/GPG-KEY-bellsoft | sudo apt-key add -
       % echo "deb [arch=amd64] https://apt.bell-sw.com/ stable main" | sudo tee /etc/apt/sources.list.d/bellsoft.list
       % sudo apt-get update
       % sudo apt-get install bellsoft-java8-full
    2. Set jdkhome
       % export jdkhome=/usr/lib/jvm/bellsoft-java8-full-amd64

    NOTE: You may need to log out and back in again after setting jdkhome before the Autopsy
          unix_setup.sh script can see the value.

-- OS X:
    1. Install BellSoft Java 8.
        % brew tap bell-sw/liberica
        for macOS BigSur and later:
             % brew install --cask liberica-jdk8-full
        for macOS versions before BigSur:
             % brew cask install liberica-jdk8-full
    2. Set jdkhome environment variable to location of JRE installation.
       e.g. add the following to ~/.bashrc
           export jdkhome=$(/usr/libexec/java_home -v 1.8)

- Confirm your version of Java by running
  % java -version
    openjdk version "1.8.0.232"
    OpenJDK Runtime Environment (build 1.8.0_232-BellSoft-b10)
    OpenJDK 64-Bit Server VM (build 25.232-b10, mixed mode)

* Install The Sleuth Kit Java Bindings *

Autopsy depends on a specific version of The Sleuth Kit.  You need the Java libraries of The Sleuth Kit installed, which is not part of all packages.

- Linux: Install the sleuthkit-java.deb file that you can download from github.com/sleuthkit/sleuthkit/releases.  This will install libewf, etc. For example:
-- % sudo apt install ./sleuthkit-java_4.8.0-1_amd64.deb

- OS X: Build The Sleuth Kit from source.
    See https://slo-sleuth.github.io/tools/InstallingAutopsyOnMacOS.html for a comprehensive write-up
    on building The Sleuth Kit and getting Autopsy to run on Mac OS. Notice that all instances of JAVA_HOME should be replaced by jdkhome.


* Install Autopsy *

- Extract the contents of the Autopsy ZIP file to a folder.
- Open a terminal and cd into the Autopsy folder.
- Run the unix_setup.sh script to configure Autopsy
  % sh unix_setup.sh


* Running Autopsy *

- In a terminal, change to the ‘bin’ directory in the Autopsy folder.
- Run Autopsy
  % ./autopsy

* Troubleshooting *

- If you see something like "Cannot create case: javafx/scene/paint/Color" it is an indication that Java FX
  is not being found.
  Confirm that the file $jdkhome/jre/lib/ext/jfxrt.jar exists. If it does not exist, return to the Java
  setup steps above.
- If you see something like "An illegal reflective access operation has occurred" it is an indication that
  the wrong version of Java is being used to run Autopsy.
  Check the version of Java reported in the ~/.autopsy/dev/var/log/messages.log file. It should contain lines that looks like:
    Java; VM; Vendor    = 1.8.0_232; OpenJDK 64-Bit Server V 25.232-b10; BellSoft
    Runtime             = OpenJDK Runtime Environment 1.8.0_232-BellSoft-b10
    Java Home           = /usr/lib/jvm/bellsoft-java8-amd64/jre

  If your messages.log file indicates that Java 8 is not being used:
  (a) confirm that you have a version of Java 8 installed and
  (b) confirm that your jdkhome environment variable is set correctly:
      % echo $jdkhome
      
- If you see something like "cannot be opened because the developer cannot be verified." it is an indication 
  that Gatekeeper is running and is stopping a file from being executed.  To fix this open a new terminal window
  and enter the following command "sudo spctl --master-disable", you will be required to enter your password.  
  This will allow any program to be be downloaded from anywhere and executed.

* Limitations (Updated May 2018) *
- Timeline does not work on OS X
- Video thumbnails are not generated (need to get a consistent version of OpenCV)
- VHD and VMDK files not supported on OS X
