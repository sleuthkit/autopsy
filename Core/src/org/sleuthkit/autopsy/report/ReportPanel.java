 /*
 *
 * Autopsy Forensic Browser
 * 
 * Copyright 2012 42six Solutions.
 * Contact: aebadirad <at> 42six <dot> com
 * Project Contact/Architect: carrier <at> sleuthkit <dot> org
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sleuthkit.autopsy.report;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import org.sleuthkit.autopsy.coreutils.Logger;
import javax.swing.*;
import javax.swing.border.Border;
import org.openide.util.Exceptions;
import org.sleuthkit.autopsy.coreutils.FileUtil;

/**
 *
 * @author Alex
 */
public class ReportPanel extends javax.swing.JPanel {

    private ReportPanelAction rpa;
    private static final Logger logger = Logger.getLogger(ReportPanel.class.getName());

    /**
     * Creates new form ReportPanel
     */
    public ReportPanel(ReportPanelAction reportpanelaction) {
        initComponents();
        this.setLayout(new GridLayout(0, 1));
        Border border = BorderFactory.createTitledBorder("Report Summary");
        this.setBorder(border);
        rpa = reportpanelaction;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jOptionPane1 = new javax.swing.JOptionPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        saveReport = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(540, 252));

        jPanel1.setMinimumSize(new java.awt.Dimension(650, 250));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(650, 250));

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ReportPanel.class, "ReportPanel.jLabel1.text")); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        saveReport.setText(org.openide.util.NbBundle.getMessage(ReportPanel.class, "ReportPanel.saveReport.text")); // NOI18N
        saveReport.setActionCommand(org.openide.util.NbBundle.getMessage(ReportPanel.class, "ReportPanel.saveReport.actionCommand")); // NOI18N
        saveReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveReportActionPerformed(evt);
            }
        });

        jButton1.setText(org.openide.util.NbBundle.getMessage(ReportPanel.class, "ReportPanel.jButton1.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 501, Short.MAX_VALUE)
                        .addComponent(saveReport))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(184, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveReport)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("");
        getAccessibleContext().setAccessibleParent(this);
    }// </editor-fold>//GEN-END:initComponents

private void saveReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveReportActionPerformed
    HashMap<ReportModule, String> reports = rpa.getReports();
    saveReportAction(reports);

}//GEN-LAST:event_saveReportActionPerformed
    /**
     * Sets the listener for the OK button
     *
     * @param e The action listener
     */
    public void setjButton1ActionListener(ActionListener e) {
        jButton1.addActionListener(e);
    }

    public void setFinishedReportText() {

        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date date = new Date();
        String reportText = "<html>These reports were generated on " + dateFormat.format(date) + ". <br><br>";
        jLabel1.setText(reportText);
        final JPanel tpanel = new JPanel(new GridBagLayout());
        tpanel.setMinimumSize(new Dimension(540,240));
        SwingUtilities.invokeLater(new Runnable() {

            GridBagConstraints c = new GridBagConstraints();
           // c.

            @Override
            public void run() {
                HashMap<ReportModule, String> reports = rpa.getReports();
                int cc = 0;
                for (Map.Entry<ReportModule, String> entry : reports.entrySet()) {
                    c.fill = GridBagConstraints.HORIZONTAL;
                    c.weightx = 1;
                    c.gridwidth = 2;
                    c.gridx = 0;
                    c.gridy = cc;
                    String tempText = "<html>" + entry.getKey().getName() + " report <br> - " + entry.getValue() + "";
                    JLabel lb = new JLabel();
                    lb.setText(tempText);
                    tpanel.add(lb, c);
                    tpanel.revalidate();
                    tpanel.repaint();
                    
                    JButton jb = new JButton();
                    jb.setText("View Report");
                    c.fill = GridBagConstraints.NONE;
                    c.weightx = 0.0;
                    c.gridwidth = 1;
                    c.gridx = 2;
                    c.gridy = cc;
                   final ReportModule rep = entry.getKey();
                   final String path = entry.getValue();
                    jb.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                rep.getPreview(path);
            }
                    });
                     tpanel.add(jb, c);
                    tpanel.revalidate();
                    tpanel.repaint();
                    cc++;
                }
            }
        });
        this.add(tpanel, 0);
    }

    private void saveReportAction(HashMap<ReportModule, String> reports) {

        int option = jFileChooser1.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            if (jFileChooser1.getSelectedFile() != null) {
                File file = jFileChooser1.getSelectedFile();
                String path = file.getParent();
                String name = file.getName();
                for (Map.Entry<ReportModule, String> entry : reports.entrySet()) {
                    exportReport(path, name, entry);
                }
            }
        }
    }

    private void exportReport(String path, String name, Map.Entry<ReportModule, String> entry) {
        ReportModule report = entry.getKey();
        String ext = report.getExtension();
        String original = entry.getValue();
        try {
            String newpath = FileUtil.copyFile(original, path, name + "-" + report.getName(), ext, true);
            JOptionPane.showMessageDialog(this, "\n" + report.getName() + " report has been successfully saved to: \n" + newpath);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "\n" + report.getName() + " report has failed to save! \n Reason: " + ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton saveReport;
    // End of variables declaration//GEN-END:variables
}
