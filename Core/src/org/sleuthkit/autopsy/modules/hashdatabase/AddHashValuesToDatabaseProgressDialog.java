/*
 * Autopsy Forensic Browser
 *
 * Copyright 2011 - 2013 Basis Technology Corp.
 * Contact: carrier <at> sleuthkit <dot> org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sleuthkit.autopsy.modules.hashdatabase;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.List;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import org.openide.util.NbBundle;
import org.sleuthkit.autopsy.coreutils.Logger;
import org.sleuthkit.datamodel.HashEntry;
import org.sleuthkit.datamodel.TskCoreException;

/**
 *
 * @author sidhesh
 */
public class AddHashValuesToDatabaseProgressDialog extends javax.swing.JDialog {

    /**
     * Creates new form AddHashValuesToDatabaseProgressDialog
     */
    public AddHashValuesToDatabaseProgressDialog() {
        super();
        initComponents();
        display();
    }

    private void display() {
        Dimension screenDimension = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((screenDimension.width - getSize().width) / 2, (screenDimension.height - getSize().height) / 2);
        setVisible(true);
    }

    void setStatusLabel(String label) {
        AddHashValuesTodatabaseStatusLabel.setText(label);
    }

    void addHashesToDatabase(HashDbManager.HashDb hashDb, List<HashEntry> hashes) {
        try {
            hashDb.addHashes(hashes);
            AddHashValuesTodatabaseStatusLabel.setText("Completed");
            AddHashValuesToDatabaseProgressBar.setIndeterminate(false);
            AddHashValuesToDatabaseProgressBar.setValue(AddHashValuesToDatabaseProgressBar.getMaximum());
            AddHashValuesToDatabaseProgressBar.setForeground(new Color(50, 205, 50));
            JOptionPane.showMessageDialog(this, NbBundle.getMessage(AddHashValuesToDatabaseProgressDialog.class, "AddHashValuesToDatabaseProgressDialog.addHashesToDatabase.dialog.success", hashes.size()));
        } catch (TskCoreException ex) {
            Logger.getLogger(AddHashValuesToDatabaseProgressDialog.class.getName()).log(Level.WARNING, NbBundle.getMessage(AddHashValuesToDatabaseProgressDialog.class, "AddHashValuesToDatabaseProgressDialog.addHashesToDatabase.dialog.error"), ex);
            AddHashValuesTodatabaseStatusLabel.setText("Error");
            AddHashValuesToDatabaseProgressBar.setIndeterminate(false);
            AddHashValuesToDatabaseProgressBar.setValue(AddHashValuesToDatabaseProgressBar.getMaximum());
            AddHashValuesToDatabaseProgressBar.setForeground(new Color(178, 34, 34));
            JOptionPane.showMessageDialog(this, NbBundle.getMessage(AddHashValuesToDatabaseProgressDialog.class, "AddHashValuesToDatabaseProgressDialog.addHashesToDatabase.dialog.error"));
        }
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddHashValuesToDatabaseProgressBar = new javax.swing.JProgressBar();
        AddHashValuesToDatabaseProgressBar.setIndeterminate(true);
        AddHashValuesTodatabaseStatusLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        org.openide.awt.Mnemonics.setLocalizedText(AddHashValuesTodatabaseStatusLabel, org.openide.util.NbBundle.getMessage(AddHashValuesToDatabaseProgressDialog.class, "AddHashValuesToDatabaseProgressDialog.AddHashValuesTodatabaseStatusLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddHashValuesToDatabaseProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddHashValuesTodatabaseStatusLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddHashValuesToDatabaseProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddHashValuesTodatabaseStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar AddHashValuesToDatabaseProgressBar;
    private javax.swing.JLabel AddHashValuesTodatabaseStatusLabel;
    // End of variables declaration//GEN-END:variables
}
