name: autopsy
# core22 brings along linting for share object library paths as well as improvements to get java gstreamer working
base: core22
version: 4.20.0
summary: A graphical interface to The Sleuth Kit and other digital forensics tools. # 79 char long summary
description: Autopsy is a graphical interface to The Sleuth Kit and other open source
  digital forensics tools.
grade: stable # must be 'stable' to release into candidate/stable channels
# TODO look into turning back to strict for easier store inclusion but more limited usage
confinement: classic # use 'strict' once you have the right plugs and slots
architectures: [amd64, arm64]
compression: lzo
icon: snap/gui/autopsy.png

plugs:
  system-files-autopsy:
    interface: system-files
    read: [/dev]

apps:
  autopsy:
    environment:
      jdkhome: $SNAP/usr/lib/jvm/java-17-openjdk-amd64
      # provide means for java gstreamer to find gstreamer libs
      jreflags: $jreflags "-Djna.library.path=$SNAP/usr/lib/x86_64-linux-gnu"
      LD_LIBRARY_PATH: $SNAP/usr/local/lib:$LD_LIBRARY_PATH
      # make sure path is set up to ensure things like photorec are found
      PATH: $SNAP/usr/bin:$SNAP/usr/local/bin:$PATH
      # gstreamer scans for plugins (i.e. app integration plugins).  this tells gstreamer where to look for the scanner and libraries
      GST_PLUGIN_SYSTEM_PATH: $SNAP/usr/lib/x86_64-linux-gnu/gstreamer-1.0
      GST_PLUGIN_SCANNER: $SNAP/usr/lib/x86_64-linux-gnu/gstreamer1.0/gstreamer-1.0/gst-plugin-scanner
      SOLR_LOGS_DIR: $HOME/.autopsy/dev/solr/logs
      SOLR_PID_DIR: $HOME/.autopsy/dev/solr/logs
    command: autopsy/bin/autopsy
    common-id: org.sleuthkit.autopsy
    plugs:
      # taken from https://snapcraft.io/docs/supported-interfaces
    - audio-playback
    - avahi-observe
    - block-devices
    - cifs-mount
    - daemon-notify
    - desktop
    - desktop-launch
    - desktop-legacy
    - dm-crypt
    - firewall-control
    - fuse-support
    - hardware-observe
    - home
    - kernel-crypto-api
    - log-observe
    - mount-observe
    - network
    - network-manager
    - network-observe
    - network-setup-observe
    - network-status
    - opengl
    - optical-drive
    - pulseaudio
    - raw-input
    - raw-usb
    - removable-media
    - sd-control
    - system-files-autopsy
    - system-observe
    - system-trace
    - udisks2
    - unity7
    - unity8
    - wayland
    - x11

parts:
  sleuthkit:
    plugin: autotools
    source: https://github.com/sleuthkit/sleuthkit.git
    source-branch: develop
    #source-tag: sleuthkit-4.12.0
    build-environment: [JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64]
    build-packages:
    - build-essential
    - autoconf
    - libtool
    - automake
    - zip
    - openjdk-17-jdk 
    - openjdk-17-jre
    - ant
    - ant-contrib
    - ant-optional
    - libpq-dev
    - testdisk
    - libafflib-dev
    - libewf-dev
    - libvhdi-dev
    - libvmdk-dev
    stage-packages:
    - build-essential
    - libpq-dev
    - testdisk
    - libafflib-dev
    - libewf-dev
    - libvhdi-dev
    - libvmdk-dev
  autopsy:
    after: [sleuthkit]
    build-packages:
    - zip
    - unzip
    - openjdk-17-jdk 
    - openjdk-17-jre
    - ant
    - doxygen
    stage-packages:
    - libde265-dev
    - libheif-dev
    - libpq-dev
    - testdisk
    - libgstreamer1.0-0
    - gstreamer1.0-plugins-base
    - gstreamer1.0-plugins-good
    - gstreamer1.0-plugins-bad
    - gstreamer1.0-plugins-ugly
    - gstreamer1.0-libav
    - gstreamer1.0-tools
    - gstreamer1.0-x
    - gstreamer1.0-alsa
    - gstreamer1.0-gl
    - gstreamer1.0-gtk3
    - gstreamer1.0-qt5
    - gstreamer1.0-pulseaudio
    - openjdk-17-jdk 
    - openjdk-17-jre
    - perl
    plugin: nil
    # source: https://github.com/sleuthkit/autopsy.git
    source: https://github.com/gdicristofaro/autopsy.git
    # source-branch: develop
    source-branch: javafx-changes
    build-environment:
    - JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
    - TSK_JAVA_LIB_PATH: $SNAPCRAFT_STAGE/usr/local/share/java
    override-build: |-
      # ----- BUILD ZIP -----
      AUTOPSY_SRC_PATH=$(pwd)
      NETBEANS_PLAT_VER=$(grep "netbeans-plat-version=" "$AUTOPSY_SRC_PATH/nbproject/platform.properties" | cut -d'=' -f2)
      AUTOPSY_PLATFORM_PATH="$AUTOPSY_SRC_PATH/netbeans-plat/$NETBEANS_PLAT_VER"
      AUTOPSY_HARNESS_PATH="$AUTOPSY_PLATFORM_PATH/harness"
      export TSK_HOME="$HOME/parts/sleuthkit/build"
      ant -Dnbplatform.active.dir="$AUTOPSY_PLATFORM_PATH" -Dnbplatform.default.harness.dir="$AUTOPSY_HARNESS_PATH" build build-zip

      # ----- SETUP EXTRACT DIRECTORY -----
      AUTOPSY_LOCATION="$SNAPCRAFT_PART_INSTALL/autopsy"
      mkdir -p $AUTOPSY_LOCATION
      AUTOPSY_ZIP=$(find ./dist -maxdepth 1 -name "autopsy-*.*.*.zip")
      AUTOPSY_ZIP_TMP_LOC=./dist/autopsy_tmp_zip_loc
      mkdir -p $AUTOPSY_ZIP_TMP_LOC
      unzip $AUTOPSY_ZIP -d $AUTOPSY_ZIP_TMP_LOC
      AUTOPSY_EXTRACTED_TMP_LOC=$(find $AUTOPSY_ZIP_TMP_LOC -maxdepth 1 -name "autopsy-*.*.*")
      cp -r $AUTOPSY_EXTRACTED_TMP_LOC/* $AUTOPSY_LOCATION

      # ----- RUN UNIX SETUP SCRIPT -----
      UNIX_SETUP_SCRIPT="$AUTOPSY_LOCATION/unix_setup.sh"
      chmod +x $UNIX_SETUP_SCRIPT
      $UNIX_SETUP_SCRIPT

      # snaps run applications with different permissions.  This ensures applications can run.
      chmod 755 "$AUTOPSY_LOCATION/bin/autopsy"

      # include this line to print all set variables
      # sed -i '129 i set -o posix ; echo $(set) >&2 ; ls -l "${jdkhome}/bin/java"' "$AUTOPSY_LOCATION/platform/lib/nbexec"
    
